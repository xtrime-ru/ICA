<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

/**
 * App\Models\UserPost
 *
 * @property int $user_id
 * @property int $post_id
 * @property int $viewed
 * @property int $liked
 * @property int $bookmarked
 * @method static Builder|UserPost whereBookmarked($value)
 * @method static Builder|UserPost whereLiked($value)
 * @method static Builder|UserPost wherePostId($value)
 * @method static Builder|UserPost whereUserId($value)
 * @method static Builder|UserPost whereViewed($value)
 * @method static Builder|UserPost newModelQuery()
 * @method static Builder|UserPost newQuery()
 * @method static Builder|UserPost query()
 * @mixin \Eloquent
 * @property \Illuminate\Support\Carbon|null $created_at
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\UserPost whereCreatedAt($value)
 */
class UserPost extends Model
{
    use HasFactory;

    protected $table = 'user_post';

    protected static $unguarded = true;

    public const UPDATED_AT = null;

    protected $primaryKey = ['user_id', 'post_id'];
    public $incrementing = false;

    protected function setKeysForSaveQuery($query)
    {
        return $query->where('user_id', $this->getAttribute('user_id'))
            ->where('post_id', $this->getAttribute('post_id'));
    }

    public function update(array $attributes = [], array $options = [])
    {
        return parent::update($attributes, $options); // TODO: Change the autogenerated stub
    }
}
